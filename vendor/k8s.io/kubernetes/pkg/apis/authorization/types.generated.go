/*
Copyright 2016 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package authorization

import (
	"errors"
	"fmt"
	codec1978 "github.com/ugorji/go/codec"
	pkg2_api "k8s.io/kubernetes/pkg/api"
	pkg1_unversioned "k8s.io/kubernetes/pkg/api/unversioned"
	pkg3_types "k8s.io/kubernetes/pkg/types"
	"reflect"
	"runtime"
	time "time"
)

const (
	// ----- content types ----
	codecSelferC_UTF81234 = 1
	codecSelferC_RAW1234  = 0
	// ----- value types used ----
	codecSelferValueTypeArray1234 = 10
	codecSelferValueTypeMap1234   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey1234    = 2
	codecSelfer_containerMapValue1234  = 3
	codecSelfer_containerMapEnd1234    = 4
	codecSelfer_containerArrayElem1234 = 6
	codecSelfer_containerArrayEnd1234  = 7
)

var (
	codecSelferBitsize1234                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr1234 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer1234 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 pkg2_api.ObjectMeta
		var v1 pkg1_unversioned.TypeMeta
		var v2 pkg3_types.UID
		var v3 time.Time
		_, _, _, _ = v0, v1, v2, v3
	}
}

func (x *SubjectAccessReview) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [18]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = x.Name != ""
			yyq2[3] = x.GenerateName != ""
			yyq2[4] = x.Namespace != ""
			yyq2[5] = x.SelfLink != ""
			yyq2[6] = x.UID != ""
			yyq2[7] = x.ResourceVersion != ""
			yyq2[8] = x.Generation != 0
			yyq2[9] = true
			yyq2[10] = x.ObjectMeta.DeletionTimestamp != nil && x.DeletionTimestamp != nil
			yyq2[11] = x.ObjectMeta.DeletionGracePeriodSeconds != nil && x.DeletionGracePeriodSeconds != nil
			yyq2[12] = len(x.Labels) != 0
			yyq2[13] = len(x.Annotations) != 0
			yyq2[14] = len(x.OwnerReferences) != 0
			yyq2[15] = len(x.Finalizers) != 0
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(18)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[2] {
					yym10 := z.EncBinary()
					_ = yym10
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym11 := z.EncBinary()
					_ = yym11
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[3] {
					yym13 := z.EncBinary()
					_ = yym13
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generateName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym14 := z.EncBinary()
					_ = yym14
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[4] {
					yym16 := z.EncBinary()
					_ = yym16
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("namespace"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym17 := z.EncBinary()
					_ = yym17
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[5] {
					yym19 := z.EncBinary()
					_ = yym19
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym20 := z.EncBinary()
					_ = yym20
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[6] {
					yym22 := z.EncBinary()
					_ = yym22
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("uid"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym23 := z.EncBinary()
					_ = yym23
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[7] {
					yym25 := z.EncBinary()
					_ = yym25
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym26 := z.EncBinary()
					_ = yym26
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[8] {
					yym28 := z.EncBinary()
					_ = yym28
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq2[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generation"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym29 := z.EncBinary()
					_ = yym29
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[9] {
					yy31 := &x.CreationTimestamp
					yym32 := z.EncBinary()
					_ = yym32
					if false {
					} else if z.HasExtensions() && z.EncExt(yy31) {
					} else if yym32 {
						z.EncBinaryMarshal(yy31)
					} else if !yym32 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy31)
					} else {
						z.EncFallback(yy31)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("creationTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy33 := &x.CreationTimestamp
					yym34 := z.EncBinary()
					_ = yym34
					if false {
					} else if z.HasExtensions() && z.EncExt(yy33) {
					} else if yym34 {
						z.EncBinaryMarshal(yy33)
					} else if !yym34 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy33)
					} else {
						z.EncFallback(yy33)
					}
				}
			}
			var yyn35 bool
			if x.ObjectMeta.DeletionTimestamp == nil {
				yyn35 = true
				goto LABEL35
			}
		LABEL35:
			if yyr2 || yy2arr2 {
				if yyn35 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq2[10] {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym36 := z.EncBinary()
							_ = yym36
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym36 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym36 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn35 {
						r.EncodeNil()
					} else {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym37 := z.EncBinary()
							_ = yym37
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym37 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym37 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					}
				}
			}
			var yyn38 bool
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				yyn38 = true
				goto LABEL38
			}
		LABEL38:
			if yyr2 || yy2arr2 {
				if yyn38 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq2[11] {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy39 := *x.DeletionGracePeriodSeconds
							yym40 := z.EncBinary()
							_ = yym40
							if false {
							} else {
								r.EncodeInt(int64(yy39))
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq2[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionGracePeriodSeconds"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn38 {
						r.EncodeNil()
					} else {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy41 := *x.DeletionGracePeriodSeconds
							yym42 := z.EncBinary()
							_ = yym42
							if false {
							} else {
								r.EncodeInt(int64(yy41))
							}
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[12] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym44 := z.EncBinary()
						_ = yym44
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym45 := z.EncBinary()
						_ = yym45
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[13] {
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym47 := z.EncBinary()
						_ = yym47
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("annotations"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym48 := z.EncBinary()
						_ = yym48
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[14] {
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym50 := z.EncBinary()
						_ = yym50
						if false {
						} else {
							h.encSliceapi_OwnerReference(([]pkg2_api.OwnerReference)(x.OwnerReferences), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("ownerReferences"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym51 := z.EncBinary()
						_ = yym51
						if false {
						} else {
							h.encSliceapi_OwnerReference(([]pkg2_api.OwnerReference)(x.OwnerReferences), e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[15] {
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym53 := z.EncBinary()
						_ = yym53
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("finalizers"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym54 := z.EncBinary()
						_ = yym54
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy56 := &x.Spec
				yy56.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy57 := &x.Spec
				yy57.CodecEncodeSelf(e)
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy59 := &x.Status
				yy59.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy60 := &x.Status
				yy60.CodecEncodeSelf(e)
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *SubjectAccessReview) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym61 := z.DecBinary()
	_ = yym61
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct62 := r.ContainerType()
		if yyct62 == codecSelferValueTypeMap1234 {
			yyl62 := r.ReadMapStart()
			if yyl62 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl62, d)
			}
		} else if yyct62 == codecSelferValueTypeArray1234 {
			yyl62 := r.ReadArrayStart()
			if yyl62 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl62, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *SubjectAccessReview) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys63Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys63Slc
	var yyhl63 bool = l >= 0
	for yyj63 := 0; ; yyj63++ {
		if yyhl63 {
			if yyj63 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys63Slc = r.DecodeBytes(yys63Slc, true, true)
		yys63 := string(yys63Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys63 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "generateName":
			if r.TryDecodeAsNil() {
				x.GenerateName = ""
			} else {
				x.GenerateName = string(r.DecodeString())
			}
		case "namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "uid":
			if r.TryDecodeAsNil() {
				x.UID = ""
			} else {
				x.UID = pkg3_types.UID(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "generation":
			if r.TryDecodeAsNil() {
				x.Generation = 0
			} else {
				x.Generation = int64(r.DecodeInt(64))
			}
		case "creationTimestamp":
			if r.TryDecodeAsNil() {
				x.CreationTimestamp = pkg1_unversioned.Time{}
			} else {
				yyv73 := &x.CreationTimestamp
				yym74 := z.DecBinary()
				_ = yym74
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv73) {
				} else if yym74 {
					z.DecBinaryUnmarshal(yyv73)
				} else if !yym74 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv73)
				} else {
					z.DecFallback(yyv73, false)
				}
			}
		case "deletionTimestamp":
			if x.ObjectMeta.DeletionTimestamp == nil {
				x.ObjectMeta.DeletionTimestamp = new(pkg1_unversioned.Time)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionTimestamp != nil {
					x.DeletionTimestamp = nil
				}
			} else {
				if x.DeletionTimestamp == nil {
					x.DeletionTimestamp = new(pkg1_unversioned.Time)
				}
				yym76 := z.DecBinary()
				_ = yym76
				if false {
				} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
				} else if yym76 {
					z.DecBinaryUnmarshal(x.DeletionTimestamp)
				} else if !yym76 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.DeletionTimestamp)
				} else {
					z.DecFallback(x.DeletionTimestamp, false)
				}
			}
		case "deletionGracePeriodSeconds":
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionGracePeriodSeconds != nil {
					x.DeletionGracePeriodSeconds = nil
				}
			} else {
				if x.DeletionGracePeriodSeconds == nil {
					x.DeletionGracePeriodSeconds = new(int64)
				}
				yym78 := z.DecBinary()
				_ = yym78
				if false {
				} else {
					*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv79 := &x.Labels
				yym80 := z.DecBinary()
				_ = yym80
				if false {
				} else {
					z.F.DecMapStringStringX(yyv79, false, d)
				}
			}
		case "annotations":
			if r.TryDecodeAsNil() {
				x.Annotations = nil
			} else {
				yyv81 := &x.Annotations
				yym82 := z.DecBinary()
				_ = yym82
				if false {
				} else {
					z.F.DecMapStringStringX(yyv81, false, d)
				}
			}
		case "ownerReferences":
			if r.TryDecodeAsNil() {
				x.OwnerReferences = nil
			} else {
				yyv83 := &x.OwnerReferences
				yym84 := z.DecBinary()
				_ = yym84
				if false {
				} else {
					h.decSliceapi_OwnerReference((*[]pkg2_api.OwnerReference)(yyv83), d)
				}
			}
		case "finalizers":
			if r.TryDecodeAsNil() {
				x.Finalizers = nil
			} else {
				yyv85 := &x.Finalizers
				yym86 := z.DecBinary()
				_ = yym86
				if false {
				} else {
					z.F.DecSliceStringX(yyv85, false, d)
				}
			}
		case "Spec":
			if r.TryDecodeAsNil() {
				x.Spec = SubjectAccessReviewSpec{}
			} else {
				yyv87 := &x.Spec
				yyv87.CodecDecodeSelf(d)
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = SubjectAccessReviewStatus{}
			} else {
				yyv88 := &x.Status
				yyv88.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys63)
		} // end switch yys63
	} // end for yyj63
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *SubjectAccessReview) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj89 int
	var yyb89 bool
	var yyhl89 bool = l >= 0
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.GenerateName = ""
	} else {
		x.GenerateName = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.UID = ""
	} else {
		x.UID = pkg3_types.UID(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Generation = 0
	} else {
		x.Generation = int64(r.DecodeInt(64))
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.CreationTimestamp = pkg1_unversioned.Time{}
	} else {
		yyv99 := &x.CreationTimestamp
		yym100 := z.DecBinary()
		_ = yym100
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv99) {
		} else if yym100 {
			z.DecBinaryUnmarshal(yyv99)
		} else if !yym100 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv99)
		} else {
			z.DecFallback(yyv99, false)
		}
	}
	if x.ObjectMeta.DeletionTimestamp == nil {
		x.ObjectMeta.DeletionTimestamp = new(pkg1_unversioned.Time)
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionTimestamp != nil {
			x.DeletionTimestamp = nil
		}
	} else {
		if x.DeletionTimestamp == nil {
			x.DeletionTimestamp = new(pkg1_unversioned.Time)
		}
		yym102 := z.DecBinary()
		_ = yym102
		if false {
		} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
		} else if yym102 {
			z.DecBinaryUnmarshal(x.DeletionTimestamp)
		} else if !yym102 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.DeletionTimestamp)
		} else {
			z.DecFallback(x.DeletionTimestamp, false)
		}
	}
	if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
		x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionGracePeriodSeconds != nil {
			x.DeletionGracePeriodSeconds = nil
		}
	} else {
		if x.DeletionGracePeriodSeconds == nil {
			x.DeletionGracePeriodSeconds = new(int64)
		}
		yym104 := z.DecBinary()
		_ = yym104
		if false {
		} else {
			*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
		}
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv105 := &x.Labels
		yym106 := z.DecBinary()
		_ = yym106
		if false {
		} else {
			z.F.DecMapStringStringX(yyv105, false, d)
		}
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Annotations = nil
	} else {
		yyv107 := &x.Annotations
		yym108 := z.DecBinary()
		_ = yym108
		if false {
		} else {
			z.F.DecMapStringStringX(yyv107, false, d)
		}
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OwnerReferences = nil
	} else {
		yyv109 := &x.OwnerReferences
		yym110 := z.DecBinary()
		_ = yym110
		if false {
		} else {
			h.decSliceapi_OwnerReference((*[]pkg2_api.OwnerReference)(yyv109), d)
		}
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Finalizers = nil
	} else {
		yyv111 := &x.Finalizers
		yym112 := z.DecBinary()
		_ = yym112
		if false {
		} else {
			z.F.DecSliceStringX(yyv111, false, d)
		}
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Spec = SubjectAccessReviewSpec{}
	} else {
		yyv113 := &x.Spec
		yyv113.CodecDecodeSelf(d)
	}
	yyj89++
	if yyhl89 {
		yyb89 = yyj89 > l
	} else {
		yyb89 = r.CheckBreak()
	}
	if yyb89 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = SubjectAccessReviewStatus{}
	} else {
		yyv114 := &x.Status
		yyv114.CodecDecodeSelf(d)
	}
	for {
		yyj89++
		if yyhl89 {
			yyb89 = yyj89 > l
		} else {
			yyb89 = r.CheckBreak()
		}
		if yyb89 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj89-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *SelfSubjectAccessReview) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym115 := z.EncBinary()
		_ = yym115
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep116 := !z.EncBinary()
			yy2arr116 := z.EncBasicHandle().StructToArray
			var yyq116 [18]bool
			_, _, _ = yysep116, yyq116, yy2arr116
			const yyr116 bool = false
			yyq116[0] = x.Kind != ""
			yyq116[1] = x.APIVersion != ""
			yyq116[2] = x.Name != ""
			yyq116[3] = x.GenerateName != ""
			yyq116[4] = x.Namespace != ""
			yyq116[5] = x.SelfLink != ""
			yyq116[6] = x.UID != ""
			yyq116[7] = x.ResourceVersion != ""
			yyq116[8] = x.Generation != 0
			yyq116[9] = true
			yyq116[10] = x.ObjectMeta.DeletionTimestamp != nil && x.DeletionTimestamp != nil
			yyq116[11] = x.ObjectMeta.DeletionGracePeriodSeconds != nil && x.DeletionGracePeriodSeconds != nil
			yyq116[12] = len(x.Labels) != 0
			yyq116[13] = len(x.Annotations) != 0
			yyq116[14] = len(x.OwnerReferences) != 0
			yyq116[15] = len(x.Finalizers) != 0
			var yynn116 int
			if yyr116 || yy2arr116 {
				r.EncodeArrayStart(18)
			} else {
				yynn116 = 2
				for _, b := range yyq116 {
					if b {
						yynn116++
					}
				}
				r.EncodeMapStart(yynn116)
				yynn116 = 0
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[0] {
					yym118 := z.EncBinary()
					_ = yym118
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym119 := z.EncBinary()
					_ = yym119
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[1] {
					yym121 := z.EncBinary()
					_ = yym121
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym122 := z.EncBinary()
					_ = yym122
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[2] {
					yym124 := z.EncBinary()
					_ = yym124
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym125 := z.EncBinary()
					_ = yym125
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[3] {
					yym127 := z.EncBinary()
					_ = yym127
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generateName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym128 := z.EncBinary()
					_ = yym128
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[4] {
					yym130 := z.EncBinary()
					_ = yym130
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("namespace"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym131 := z.EncBinary()
					_ = yym131
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[5] {
					yym133 := z.EncBinary()
					_ = yym133
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym134 := z.EncBinary()
					_ = yym134
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[6] {
					yym136 := z.EncBinary()
					_ = yym136
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("uid"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym137 := z.EncBinary()
					_ = yym137
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[7] {
					yym139 := z.EncBinary()
					_ = yym139
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq116[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym140 := z.EncBinary()
					_ = yym140
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[8] {
					yym142 := z.EncBinary()
					_ = yym142
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq116[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generation"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym143 := z.EncBinary()
					_ = yym143
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[9] {
					yy145 := &x.CreationTimestamp
					yym146 := z.EncBinary()
					_ = yym146
					if false {
					} else if z.HasExtensions() && z.EncExt(yy145) {
					} else if yym146 {
						z.EncBinaryMarshal(yy145)
					} else if !yym146 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy145)
					} else {
						z.EncFallback(yy145)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq116[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("creationTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy147 := &x.CreationTimestamp
					yym148 := z.EncBinary()
					_ = yym148
					if false {
					} else if z.HasExtensions() && z.EncExt(yy147) {
					} else if yym148 {
						z.EncBinaryMarshal(yy147)
					} else if !yym148 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy147)
					} else {
						z.EncFallback(yy147)
					}
				}
			}
			var yyn149 bool
			if x.ObjectMeta.DeletionTimestamp == nil {
				yyn149 = true
				goto LABEL149
			}
		LABEL149:
			if yyr116 || yy2arr116 {
				if yyn149 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq116[10] {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym150 := z.EncBinary()
							_ = yym150
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym150 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym150 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq116[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn149 {
						r.EncodeNil()
					} else {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym151 := z.EncBinary()
							_ = yym151
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym151 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym151 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					}
				}
			}
			var yyn152 bool
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				yyn152 = true
				goto LABEL152
			}
		LABEL152:
			if yyr116 || yy2arr116 {
				if yyn152 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq116[11] {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy153 := *x.DeletionGracePeriodSeconds
							yym154 := z.EncBinary()
							_ = yym154
							if false {
							} else {
								r.EncodeInt(int64(yy153))
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq116[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionGracePeriodSeconds"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn152 {
						r.EncodeNil()
					} else {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy155 := *x.DeletionGracePeriodSeconds
							yym156 := z.EncBinary()
							_ = yym156
							if false {
							} else {
								r.EncodeInt(int64(yy155))
							}
						}
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[12] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym158 := z.EncBinary()
						_ = yym158
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq116[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym159 := z.EncBinary()
						_ = yym159
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[13] {
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym161 := z.EncBinary()
						_ = yym161
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq116[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("annotations"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym162 := z.EncBinary()
						_ = yym162
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[14] {
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym164 := z.EncBinary()
						_ = yym164
						if false {
						} else {
							h.encSliceapi_OwnerReference(([]pkg2_api.OwnerReference)(x.OwnerReferences), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq116[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("ownerReferences"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym165 := z.EncBinary()
						_ = yym165
						if false {
						} else {
							h.encSliceapi_OwnerReference(([]pkg2_api.OwnerReference)(x.OwnerReferences), e)
						}
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq116[15] {
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym167 := z.EncBinary()
						_ = yym167
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq116[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("finalizers"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym168 := z.EncBinary()
						_ = yym168
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				}
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy170 := &x.Spec
				yy170.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy171 := &x.Spec
				yy171.CodecEncodeSelf(e)
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy173 := &x.Status
				yy173.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy174 := &x.Status
				yy174.CodecEncodeSelf(e)
			}
			if yyr116 || yy2arr116 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *SelfSubjectAccessReview) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym175 := z.DecBinary()
	_ = yym175
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct176 := r.ContainerType()
		if yyct176 == codecSelferValueTypeMap1234 {
			yyl176 := r.ReadMapStart()
			if yyl176 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl176, d)
			}
		} else if yyct176 == codecSelferValueTypeArray1234 {
			yyl176 := r.ReadArrayStart()
			if yyl176 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl176, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *SelfSubjectAccessReview) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys177Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys177Slc
	var yyhl177 bool = l >= 0
	for yyj177 := 0; ; yyj177++ {
		if yyhl177 {
			if yyj177 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys177Slc = r.DecodeBytes(yys177Slc, true, true)
		yys177 := string(yys177Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys177 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "generateName":
			if r.TryDecodeAsNil() {
				x.GenerateName = ""
			} else {
				x.GenerateName = string(r.DecodeString())
			}
		case "namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "uid":
			if r.TryDecodeAsNil() {
				x.UID = ""
			} else {
				x.UID = pkg3_types.UID(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "generation":
			if r.TryDecodeAsNil() {
				x.Generation = 0
			} else {
				x.Generation = int64(r.DecodeInt(64))
			}
		case "creationTimestamp":
			if r.TryDecodeAsNil() {
				x.CreationTimestamp = pkg1_unversioned.Time{}
			} else {
				yyv187 := &x.CreationTimestamp
				yym188 := z.DecBinary()
				_ = yym188
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv187) {
				} else if yym188 {
					z.DecBinaryUnmarshal(yyv187)
				} else if !yym188 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv187)
				} else {
					z.DecFallback(yyv187, false)
				}
			}
		case "deletionTimestamp":
			if x.ObjectMeta.DeletionTimestamp == nil {
				x.ObjectMeta.DeletionTimestamp = new(pkg1_unversioned.Time)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionTimestamp != nil {
					x.DeletionTimestamp = nil
				}
			} else {
				if x.DeletionTimestamp == nil {
					x.DeletionTimestamp = new(pkg1_unversioned.Time)
				}
				yym190 := z.DecBinary()
				_ = yym190
				if false {
				} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
				} else if yym190 {
					z.DecBinaryUnmarshal(x.DeletionTimestamp)
				} else if !yym190 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.DeletionTimestamp)
				} else {
					z.DecFallback(x.DeletionTimestamp, false)
				}
			}
		case "deletionGracePeriodSeconds":
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionGracePeriodSeconds != nil {
					x.DeletionGracePeriodSeconds = nil
				}
			} else {
				if x.DeletionGracePeriodSeconds == nil {
					x.DeletionGracePeriodSeconds = new(int64)
				}
				yym192 := z.DecBinary()
				_ = yym192
				if false {
				} else {
					*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv193 := &x.Labels
				yym194 := z.DecBinary()
				_ = yym194
				if false {
				} else {
					z.F.DecMapStringStringX(yyv193, false, d)
				}
			}
		case "annotations":
			if r.TryDecodeAsNil() {
				x.Annotations = nil
			} else {
				yyv195 := &x.Annotations
				yym196 := z.DecBinary()
				_ = yym196
				if false {
				} else {
					z.F.DecMapStringStringX(yyv195, false, d)
				}
			}
		case "ownerReferences":
			if r.TryDecodeAsNil() {
				x.OwnerReferences = nil
			} else {
				yyv197 := &x.OwnerReferences
				yym198 := z.DecBinary()
				_ = yym198
				if false {
				} else {
					h.decSliceapi_OwnerReference((*[]pkg2_api.OwnerReference)(yyv197), d)
				}
			}
		case "finalizers":
			if r.TryDecodeAsNil() {
				x.Finalizers = nil
			} else {
				yyv199 := &x.Finalizers
				yym200 := z.DecBinary()
				_ = yym200
				if false {
				} else {
					z.F.DecSliceStringX(yyv199, false, d)
				}
			}
		case "Spec":
			if r.TryDecodeAsNil() {
				x.Spec = SelfSubjectAccessReviewSpec{}
			} else {
				yyv201 := &x.Spec
				yyv201.CodecDecodeSelf(d)
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = SubjectAccessReviewStatus{}
			} else {
				yyv202 := &x.Status
				yyv202.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys177)
		} // end switch yys177
	} // end for yyj177
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *SelfSubjectAccessReview) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj203 int
	var yyb203 bool
	var yyhl203 bool = l >= 0
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.GenerateName = ""
	} else {
		x.GenerateName = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.UID = ""
	} else {
		x.UID = pkg3_types.UID(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Generation = 0
	} else {
		x.Generation = int64(r.DecodeInt(64))
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.CreationTimestamp = pkg1_unversioned.Time{}
	} else {
		yyv213 := &x.CreationTimestamp
		yym214 := z.DecBinary()
		_ = yym214
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv213) {
		} else if yym214 {
			z.DecBinaryUnmarshal(yyv213)
		} else if !yym214 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv213)
		} else {
			z.DecFallback(yyv213, false)
		}
	}
	if x.ObjectMeta.DeletionTimestamp == nil {
		x.ObjectMeta.DeletionTimestamp = new(pkg1_unversioned.Time)
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionTimestamp != nil {
			x.DeletionTimestamp = nil
		}
	} else {
		if x.DeletionTimestamp == nil {
			x.DeletionTimestamp = new(pkg1_unversioned.Time)
		}
		yym216 := z.DecBinary()
		_ = yym216
		if false {
		} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
		} else if yym216 {
			z.DecBinaryUnmarshal(x.DeletionTimestamp)
		} else if !yym216 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.DeletionTimestamp)
		} else {
			z.DecFallback(x.DeletionTimestamp, false)
		}
	}
	if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
		x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionGracePeriodSeconds != nil {
			x.DeletionGracePeriodSeconds = nil
		}
	} else {
		if x.DeletionGracePeriodSeconds == nil {
			x.DeletionGracePeriodSeconds = new(int64)
		}
		yym218 := z.DecBinary()
		_ = yym218
		if false {
		} else {
			*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
		}
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv219 := &x.Labels
		yym220 := z.DecBinary()
		_ = yym220
		if false {
		} else {
			z.F.DecMapStringStringX(yyv219, false, d)
		}
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Annotations = nil
	} else {
		yyv221 := &x.Annotations
		yym222 := z.DecBinary()
		_ = yym222
		if false {
		} else {
			z.F.DecMapStringStringX(yyv221, false, d)
		}
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OwnerReferences = nil
	} else {
		yyv223 := &x.OwnerReferences
		yym224 := z.DecBinary()
		_ = yym224
		if false {
		} else {
			h.decSliceapi_OwnerReference((*[]pkg2_api.OwnerReference)(yyv223), d)
		}
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Finalizers = nil
	} else {
		yyv225 := &x.Finalizers
		yym226 := z.DecBinary()
		_ = yym226
		if false {
		} else {
			z.F.DecSliceStringX(yyv225, false, d)
		}
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Spec = SelfSubjectAccessReviewSpec{}
	} else {
		yyv227 := &x.Spec
		yyv227.CodecDecodeSelf(d)
	}
	yyj203++
	if yyhl203 {
		yyb203 = yyj203 > l
	} else {
		yyb203 = r.CheckBreak()
	}
	if yyb203 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = SubjectAccessReviewStatus{}
	} else {
		yyv228 := &x.Status
		yyv228.CodecDecodeSelf(d)
	}
	for {
		yyj203++
		if yyhl203 {
			yyb203 = yyj203 > l
		} else {
			yyb203 = r.CheckBreak()
		}
		if yyb203 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj203-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *LocalSubjectAccessReview) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym229 := z.EncBinary()
		_ = yym229
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep230 := !z.EncBinary()
			yy2arr230 := z.EncBasicHandle().StructToArray
			var yyq230 [18]bool
			_, _, _ = yysep230, yyq230, yy2arr230
			const yyr230 bool = false
			yyq230[0] = x.Kind != ""
			yyq230[1] = x.APIVersion != ""
			yyq230[2] = x.Name != ""
			yyq230[3] = x.GenerateName != ""
			yyq230[4] = x.Namespace != ""
			yyq230[5] = x.SelfLink != ""
			yyq230[6] = x.UID != ""
			yyq230[7] = x.ResourceVersion != ""
			yyq230[8] = x.Generation != 0
			yyq230[9] = true
			yyq230[10] = x.ObjectMeta.DeletionTimestamp != nil && x.DeletionTimestamp != nil
			yyq230[11] = x.ObjectMeta.DeletionGracePeriodSeconds != nil && x.DeletionGracePeriodSeconds != nil
			yyq230[12] = len(x.Labels) != 0
			yyq230[13] = len(x.Annotations) != 0
			yyq230[14] = len(x.OwnerReferences) != 0
			yyq230[15] = len(x.Finalizers) != 0
			var yynn230 int
			if yyr230 || yy2arr230 {
				r.EncodeArrayStart(18)
			} else {
				yynn230 = 2
				for _, b := range yyq230 {
					if b {
						yynn230++
					}
				}
				r.EncodeMapStart(yynn230)
				yynn230 = 0
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[0] {
					yym232 := z.EncBinary()
					_ = yym232
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym233 := z.EncBinary()
					_ = yym233
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[1] {
					yym235 := z.EncBinary()
					_ = yym235
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym236 := z.EncBinary()
					_ = yym236
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[2] {
					yym238 := z.EncBinary()
					_ = yym238
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym239 := z.EncBinary()
					_ = yym239
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[3] {
					yym241 := z.EncBinary()
					_ = yym241
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generateName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym242 := z.EncBinary()
					_ = yym242
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[4] {
					yym244 := z.EncBinary()
					_ = yym244
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("namespace"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym245 := z.EncBinary()
					_ = yym245
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[5] {
					yym247 := z.EncBinary()
					_ = yym247
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym248 := z.EncBinary()
					_ = yym248
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[6] {
					yym250 := z.EncBinary()
					_ = yym250
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("uid"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym251 := z.EncBinary()
					_ = yym251
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[7] {
					yym253 := z.EncBinary()
					_ = yym253
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq230[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym254 := z.EncBinary()
					_ = yym254
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[8] {
					yym256 := z.EncBinary()
					_ = yym256
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq230[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generation"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym257 := z.EncBinary()
					_ = yym257
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[9] {
					yy259 := &x.CreationTimestamp
					yym260 := z.EncBinary()
					_ = yym260
					if false {
					} else if z.HasExtensions() && z.EncExt(yy259) {
					} else if yym260 {
						z.EncBinaryMarshal(yy259)
					} else if !yym260 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy259)
					} else {
						z.EncFallback(yy259)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq230[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("creationTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy261 := &x.CreationTimestamp
					yym262 := z.EncBinary()
					_ = yym262
					if false {
					} else if z.HasExtensions() && z.EncExt(yy261) {
					} else if yym262 {
						z.EncBinaryMarshal(yy261)
					} else if !yym262 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy261)
					} else {
						z.EncFallback(yy261)
					}
				}
			}
			var yyn263 bool
			if x.ObjectMeta.DeletionTimestamp == nil {
				yyn263 = true
				goto LABEL263
			}
		LABEL263:
			if yyr230 || yy2arr230 {
				if yyn263 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq230[10] {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym264 := z.EncBinary()
							_ = yym264
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym264 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym264 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq230[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn263 {
						r.EncodeNil()
					} else {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym265 := z.EncBinary()
							_ = yym265
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym265 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym265 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					}
				}
			}
			var yyn266 bool
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				yyn266 = true
				goto LABEL266
			}
		LABEL266:
			if yyr230 || yy2arr230 {
				if yyn266 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq230[11] {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy267 := *x.DeletionGracePeriodSeconds
							yym268 := z.EncBinary()
							_ = yym268
							if false {
							} else {
								r.EncodeInt(int64(yy267))
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq230[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionGracePeriodSeconds"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn266 {
						r.EncodeNil()
					} else {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy269 := *x.DeletionGracePeriodSeconds
							yym270 := z.EncBinary()
							_ = yym270
							if false {
							} else {
								r.EncodeInt(int64(yy269))
							}
						}
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[12] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym272 := z.EncBinary()
						_ = yym272
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq230[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym273 := z.EncBinary()
						_ = yym273
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[13] {
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym275 := z.EncBinary()
						_ = yym275
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq230[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("annotations"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym276 := z.EncBinary()
						_ = yym276
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[14] {
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym278 := z.EncBinary()
						_ = yym278
						if false {
						} else {
							h.encSliceapi_OwnerReference(([]pkg2_api.OwnerReference)(x.OwnerReferences), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq230[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("ownerReferences"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym279 := z.EncBinary()
						_ = yym279
						if false {
						} else {
							h.encSliceapi_OwnerReference(([]pkg2_api.OwnerReference)(x.OwnerReferences), e)
						}
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq230[15] {
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym281 := z.EncBinary()
						_ = yym281
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq230[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("finalizers"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym282 := z.EncBinary()
						_ = yym282
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				}
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy284 := &x.Spec
				yy284.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy285 := &x.Spec
				yy285.CodecEncodeSelf(e)
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy287 := &x.Status
				yy287.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy288 := &x.Status
				yy288.CodecEncodeSelf(e)
			}
			if yyr230 || yy2arr230 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *LocalSubjectAccessReview) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym289 := z.DecBinary()
	_ = yym289
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct290 := r.ContainerType()
		if yyct290 == codecSelferValueTypeMap1234 {
			yyl290 := r.ReadMapStart()
			if yyl290 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl290, d)
			}
		} else if yyct290 == codecSelferValueTypeArray1234 {
			yyl290 := r.ReadArrayStart()
			if yyl290 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl290, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *LocalSubjectAccessReview) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys291Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys291Slc
	var yyhl291 bool = l >= 0
	for yyj291 := 0; ; yyj291++ {
		if yyhl291 {
			if yyj291 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys291Slc = r.DecodeBytes(yys291Slc, true, true)
		yys291 := string(yys291Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys291 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "generateName":
			if r.TryDecodeAsNil() {
				x.GenerateName = ""
			} else {
				x.GenerateName = string(r.DecodeString())
			}
		case "namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "uid":
			if r.TryDecodeAsNil() {
				x.UID = ""
			} else {
				x.UID = pkg3_types.UID(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "generation":
			if r.TryDecodeAsNil() {
				x.Generation = 0
			} else {
				x.Generation = int64(r.DecodeInt(64))
			}
		case "creationTimestamp":
			if r.TryDecodeAsNil() {
				x.CreationTimestamp = pkg1_unversioned.Time{}
			} else {
				yyv301 := &x.CreationTimestamp
				yym302 := z.DecBinary()
				_ = yym302
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv301) {
				} else if yym302 {
					z.DecBinaryUnmarshal(yyv301)
				} else if !yym302 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv301)
				} else {
					z.DecFallback(yyv301, false)
				}
			}
		case "deletionTimestamp":
			if x.ObjectMeta.DeletionTimestamp == nil {
				x.ObjectMeta.DeletionTimestamp = new(pkg1_unversioned.Time)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionTimestamp != nil {
					x.DeletionTimestamp = nil
				}
			} else {
				if x.DeletionTimestamp == nil {
					x.DeletionTimestamp = new(pkg1_unversioned.Time)
				}
				yym304 := z.DecBinary()
				_ = yym304
				if false {
				} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
				} else if yym304 {
					z.DecBinaryUnmarshal(x.DeletionTimestamp)
				} else if !yym304 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.DeletionTimestamp)
				} else {
					z.DecFallback(x.DeletionTimestamp, false)
				}
			}
		case "deletionGracePeriodSeconds":
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionGracePeriodSeconds != nil {
					x.DeletionGracePeriodSeconds = nil
				}
			} else {
				if x.DeletionGracePeriodSeconds == nil {
					x.DeletionGracePeriodSeconds = new(int64)
				}
				yym306 := z.DecBinary()
				_ = yym306
				if false {
				} else {
					*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv307 := &x.Labels
				yym308 := z.DecBinary()
				_ = yym308
				if false {
				} else {
					z.F.DecMapStringStringX(yyv307, false, d)
				}
			}
		case "annotations":
			if r.TryDecodeAsNil() {
				x.Annotations = nil
			} else {
				yyv309 := &x.Annotations
				yym310 := z.DecBinary()
				_ = yym310
				if false {
				} else {
					z.F.DecMapStringStringX(yyv309, false, d)
				}
			}
		case "ownerReferences":
			if r.TryDecodeAsNil() {
				x.OwnerReferences = nil
			} else {
				yyv311 := &x.OwnerReferences
				yym312 := z.DecBinary()
				_ = yym312
				if false {
				} else {
					h.decSliceapi_OwnerReference((*[]pkg2_api.OwnerReference)(yyv311), d)
				}
			}
		case "finalizers":
			if r.TryDecodeAsNil() {
				x.Finalizers = nil
			} else {
				yyv313 := &x.Finalizers
				yym314 := z.DecBinary()
				_ = yym314
				if false {
				} else {
					z.F.DecSliceStringX(yyv313, false, d)
				}
			}
		case "Spec":
			if r.TryDecodeAsNil() {
				x.Spec = SubjectAccessReviewSpec{}
			} else {
				yyv315 := &x.Spec
				yyv315.CodecDecodeSelf(d)
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = SubjectAccessReviewStatus{}
			} else {
				yyv316 := &x.Status
				yyv316.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys291)
		} // end switch yys291
	} // end for yyj291
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *LocalSubjectAccessReview) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj317 int
	var yyb317 bool
	var yyhl317 bool = l >= 0
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.GenerateName = ""
	} else {
		x.GenerateName = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.UID = ""
	} else {
		x.UID = pkg3_types.UID(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Generation = 0
	} else {
		x.Generation = int64(r.DecodeInt(64))
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.CreationTimestamp = pkg1_unversioned.Time{}
	} else {
		yyv327 := &x.CreationTimestamp
		yym328 := z.DecBinary()
		_ = yym328
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv327) {
		} else if yym328 {
			z.DecBinaryUnmarshal(yyv327)
		} else if !yym328 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv327)
		} else {
			z.DecFallback(yyv327, false)
		}
	}
	if x.ObjectMeta.DeletionTimestamp == nil {
		x.ObjectMeta.DeletionTimestamp = new(pkg1_unversioned.Time)
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionTimestamp != nil {
			x.DeletionTimestamp = nil
		}
	} else {
		if x.DeletionTimestamp == nil {
			x.DeletionTimestamp = new(pkg1_unversioned.Time)
		}
		yym330 := z.DecBinary()
		_ = yym330
		if false {
		} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
		} else if yym330 {
			z.DecBinaryUnmarshal(x.DeletionTimestamp)
		} else if !yym330 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.DeletionTimestamp)
		} else {
			z.DecFallback(x.DeletionTimestamp, false)
		}
	}
	if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
		x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionGracePeriodSeconds != nil {
			x.DeletionGracePeriodSeconds = nil
		}
	} else {
		if x.DeletionGracePeriodSeconds == nil {
			x.DeletionGracePeriodSeconds = new(int64)
		}
		yym332 := z.DecBinary()
		_ = yym332
		if false {
		} else {
			*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
		}
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv333 := &x.Labels
		yym334 := z.DecBinary()
		_ = yym334
		if false {
		} else {
			z.F.DecMapStringStringX(yyv333, false, d)
		}
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Annotations = nil
	} else {
		yyv335 := &x.Annotations
		yym336 := z.DecBinary()
		_ = yym336
		if false {
		} else {
			z.F.DecMapStringStringX(yyv335, false, d)
		}
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OwnerReferences = nil
	} else {
		yyv337 := &x.OwnerReferences
		yym338 := z.DecBinary()
		_ = yym338
		if false {
		} else {
			h.decSliceapi_OwnerReference((*[]pkg2_api.OwnerReference)(yyv337), d)
		}
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Finalizers = nil
	} else {
		yyv339 := &x.Finalizers
		yym340 := z.DecBinary()
		_ = yym340
		if false {
		} else {
			z.F.DecSliceStringX(yyv339, false, d)
		}
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Spec = SubjectAccessReviewSpec{}
	} else {
		yyv341 := &x.Spec
		yyv341.CodecDecodeSelf(d)
	}
	yyj317++
	if yyhl317 {
		yyb317 = yyj317 > l
	} else {
		yyb317 = r.CheckBreak()
	}
	if yyb317 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = SubjectAccessReviewStatus{}
	} else {
		yyv342 := &x.Status
		yyv342.CodecDecodeSelf(d)
	}
	for {
		yyj317++
		if yyhl317 {
			yyb317 = yyj317 > l
		} else {
			yyb317 = r.CheckBreak()
		}
		if yyb317 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj317-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *ResourceAttributes) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym343 := z.EncBinary()
		_ = yym343
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep344 := !z.EncBinary()
			yy2arr344 := z.EncBasicHandle().StructToArray
			var yyq344 [7]bool
			_, _, _ = yysep344, yyq344, yy2arr344
			const yyr344 bool = false
			var yynn344 int
			if yyr344 || yy2arr344 {
				r.EncodeArrayStart(7)
			} else {
				yynn344 = 7
				for _, b := range yyq344 {
					if b {
						yynn344++
					}
				}
				r.EncodeMapStart(yynn344)
				yynn344 = 0
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym346 := z.EncBinary()
				_ = yym346
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Namespace"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym347 := z.EncBinary()
				_ = yym347
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym349 := z.EncBinary()
				_ = yym349
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Verb))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Verb"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym350 := z.EncBinary()
				_ = yym350
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Verb))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym352 := z.EncBinary()
				_ = yym352
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Group))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Group"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym353 := z.EncBinary()
				_ = yym353
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Group))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym355 := z.EncBinary()
				_ = yym355
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Version))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Version"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym356 := z.EncBinary()
				_ = yym356
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Version))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym358 := z.EncBinary()
				_ = yym358
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Resource))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Resource"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym359 := z.EncBinary()
				_ = yym359
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Resource))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym361 := z.EncBinary()
				_ = yym361
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Subresource))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Subresource"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym362 := z.EncBinary()
				_ = yym362
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Subresource))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym364 := z.EncBinary()
				_ = yym364
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym365 := z.EncBinary()
				_ = yym365
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Name))
				}
			}
			if yyr344 || yy2arr344 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *ResourceAttributes) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym366 := z.DecBinary()
	_ = yym366
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct367 := r.ContainerType()
		if yyct367 == codecSelferValueTypeMap1234 {
			yyl367 := r.ReadMapStart()
			if yyl367 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl367, d)
			}
		} else if yyct367 == codecSelferValueTypeArray1234 {
			yyl367 := r.ReadArrayStart()
			if yyl367 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl367, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *ResourceAttributes) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys368Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys368Slc
	var yyhl368 bool = l >= 0
	for yyj368 := 0; ; yyj368++ {
		if yyhl368 {
			if yyj368 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys368Slc = r.DecodeBytes(yys368Slc, true, true)
		yys368 := string(yys368Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys368 {
		case "Namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "Verb":
			if r.TryDecodeAsNil() {
				x.Verb = ""
			} else {
				x.Verb = string(r.DecodeString())
			}
		case "Group":
			if r.TryDecodeAsNil() {
				x.Group = ""
			} else {
				x.Group = string(r.DecodeString())
			}
		case "Version":
			if r.TryDecodeAsNil() {
				x.Version = ""
			} else {
				x.Version = string(r.DecodeString())
			}
		case "Resource":
			if r.TryDecodeAsNil() {
				x.Resource = ""
			} else {
				x.Resource = string(r.DecodeString())
			}
		case "Subresource":
			if r.TryDecodeAsNil() {
				x.Subresource = ""
			} else {
				x.Subresource = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys368)
		} // end switch yys368
	} // end for yyj368
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *ResourceAttributes) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj376 int
	var yyb376 bool
	var yyhl376 bool = l >= 0
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Verb = ""
	} else {
		x.Verb = string(r.DecodeString())
	}
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Group = ""
	} else {
		x.Group = string(r.DecodeString())
	}
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Version = ""
	} else {
		x.Version = string(r.DecodeString())
	}
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Resource = ""
	} else {
		x.Resource = string(r.DecodeString())
	}
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Subresource = ""
	} else {
		x.Subresource = string(r.DecodeString())
	}
	yyj376++
	if yyhl376 {
		yyb376 = yyj376 > l
	} else {
		yyb376 = r.CheckBreak()
	}
	if yyb376 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	for {
		yyj376++
		if yyhl376 {
			yyb376 = yyj376 > l
		} else {
			yyb376 = r.CheckBreak()
		}
		if yyb376 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj376-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *NonResourceAttributes) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym384 := z.EncBinary()
		_ = yym384
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep385 := !z.EncBinary()
			yy2arr385 := z.EncBasicHandle().StructToArray
			var yyq385 [2]bool
			_, _, _ = yysep385, yyq385, yy2arr385
			const yyr385 bool = false
			var yynn385 int
			if yyr385 || yy2arr385 {
				r.EncodeArrayStart(2)
			} else {
				yynn385 = 2
				for _, b := range yyq385 {
					if b {
						yynn385++
					}
				}
				r.EncodeMapStart(yynn385)
				yynn385 = 0
			}
			if yyr385 || yy2arr385 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym387 := z.EncBinary()
				_ = yym387
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Path))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Path"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym388 := z.EncBinary()
				_ = yym388
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Path))
				}
			}
			if yyr385 || yy2arr385 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym390 := z.EncBinary()
				_ = yym390
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Verb))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Verb"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym391 := z.EncBinary()
				_ = yym391
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Verb))
				}
			}
			if yyr385 || yy2arr385 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *NonResourceAttributes) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym392 := z.DecBinary()
	_ = yym392
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct393 := r.ContainerType()
		if yyct393 == codecSelferValueTypeMap1234 {
			yyl393 := r.ReadMapStart()
			if yyl393 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl393, d)
			}
		} else if yyct393 == codecSelferValueTypeArray1234 {
			yyl393 := r.ReadArrayStart()
			if yyl393 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl393, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *NonResourceAttributes) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys394Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys394Slc
	var yyhl394 bool = l >= 0
	for yyj394 := 0; ; yyj394++ {
		if yyhl394 {
			if yyj394 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys394Slc = r.DecodeBytes(yys394Slc, true, true)
		yys394 := string(yys394Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys394 {
		case "Path":
			if r.TryDecodeAsNil() {
				x.Path = ""
			} else {
				x.Path = string(r.DecodeString())
			}
		case "Verb":
			if r.TryDecodeAsNil() {
				x.Verb = ""
			} else {
				x.Verb = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys394)
		} // end switch yys394
	} // end for yyj394
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *NonResourceAttributes) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj397 int
	var yyb397 bool
	var yyhl397 bool = l >= 0
	yyj397++
	if yyhl397 {
		yyb397 = yyj397 > l
	} else {
		yyb397 = r.CheckBreak()
	}
	if yyb397 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Path = ""
	} else {
		x.Path = string(r.DecodeString())
	}
	yyj397++
	if yyhl397 {
		yyb397 = yyj397 > l
	} else {
		yyb397 = r.CheckBreak()
	}
	if yyb397 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Verb = ""
	} else {
		x.Verb = string(r.DecodeString())
	}
	for {
		yyj397++
		if yyhl397 {
			yyb397 = yyj397 > l
		} else {
			yyb397 = r.CheckBreak()
		}
		if yyb397 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj397-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *SubjectAccessReviewSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym400 := z.EncBinary()
		_ = yym400
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep401 := !z.EncBinary()
			yy2arr401 := z.EncBasicHandle().StructToArray
			var yyq401 [5]bool
			_, _, _ = yysep401, yyq401, yy2arr401
			const yyr401 bool = false
			var yynn401 int
			if yyr401 || yy2arr401 {
				r.EncodeArrayStart(5)
			} else {
				yynn401 = 5
				for _, b := range yyq401 {
					if b {
						yynn401++
					}
				}
				r.EncodeMapStart(yynn401)
				yynn401 = 0
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.ResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.ResourceAttributes.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("ResourceAttributes"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.ResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.ResourceAttributes.CodecEncodeSelf(e)
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.NonResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.NonResourceAttributes.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("NonResourceAttributes"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.NonResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.NonResourceAttributes.CodecEncodeSelf(e)
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym405 := z.EncBinary()
				_ = yym405
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.User))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("User"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym406 := z.EncBinary()
				_ = yym406
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.User))
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Groups == nil {
					r.EncodeNil()
				} else {
					yym408 := z.EncBinary()
					_ = yym408
					if false {
					} else {
						z.F.EncSliceStringV(x.Groups, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Groups"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Groups == nil {
					r.EncodeNil()
				} else {
					yym409 := z.EncBinary()
					_ = yym409
					if false {
					} else {
						z.F.EncSliceStringV(x.Groups, false, e)
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Extra == nil {
					r.EncodeNil()
				} else {
					yym411 := z.EncBinary()
					_ = yym411
					if false {
					} else {
						h.encMapstringExtraValue((map[string]ExtraValue)(x.Extra), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Extra"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Extra == nil {
					r.EncodeNil()
				} else {
					yym412 := z.EncBinary()
					_ = yym412
					if false {
					} else {
						h.encMapstringExtraValue((map[string]ExtraValue)(x.Extra), e)
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *SubjectAccessReviewSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym413 := z.DecBinary()
	_ = yym413
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct414 := r.ContainerType()
		if yyct414 == codecSelferValueTypeMap1234 {
			yyl414 := r.ReadMapStart()
			if yyl414 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl414, d)
			}
		} else if yyct414 == codecSelferValueTypeArray1234 {
			yyl414 := r.ReadArrayStart()
			if yyl414 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl414, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *SubjectAccessReviewSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys415Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys415Slc
	var yyhl415 bool = l >= 0
	for yyj415 := 0; ; yyj415++ {
		if yyhl415 {
			if yyj415 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys415Slc = r.DecodeBytes(yys415Slc, true, true)
		yys415 := string(yys415Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys415 {
		case "ResourceAttributes":
			if r.TryDecodeAsNil() {
				if x.ResourceAttributes != nil {
					x.ResourceAttributes = nil
				}
			} else {
				if x.ResourceAttributes == nil {
					x.ResourceAttributes = new(ResourceAttributes)
				}
				x.ResourceAttributes.CodecDecodeSelf(d)
			}
		case "NonResourceAttributes":
			if r.TryDecodeAsNil() {
				if x.NonResourceAttributes != nil {
					x.NonResourceAttributes = nil
				}
			} else {
				if x.NonResourceAttributes == nil {
					x.NonResourceAttributes = new(NonResourceAttributes)
				}
				x.NonResourceAttributes.CodecDecodeSelf(d)
			}
		case "User":
			if r.TryDecodeAsNil() {
				x.User = ""
			} else {
				x.User = string(r.DecodeString())
			}
		case "Groups":
			if r.TryDecodeAsNil() {
				x.Groups = nil
			} else {
				yyv419 := &x.Groups
				yym420 := z.DecBinary()
				_ = yym420
				if false {
				} else {
					z.F.DecSliceStringX(yyv419, false, d)
				}
			}
		case "Extra":
			if r.TryDecodeAsNil() {
				x.Extra = nil
			} else {
				yyv421 := &x.Extra
				yym422 := z.DecBinary()
				_ = yym422
				if false {
				} else {
					h.decMapstringExtraValue((*map[string]ExtraValue)(yyv421), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys415)
		} // end switch yys415
	} // end for yyj415
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *SubjectAccessReviewSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj423 int
	var yyb423 bool
	var yyhl423 bool = l >= 0
	yyj423++
	if yyhl423 {
		yyb423 = yyj423 > l
	} else {
		yyb423 = r.CheckBreak()
	}
	if yyb423 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.ResourceAttributes != nil {
			x.ResourceAttributes = nil
		}
	} else {
		if x.ResourceAttributes == nil {
			x.ResourceAttributes = new(ResourceAttributes)
		}
		x.ResourceAttributes.CodecDecodeSelf(d)
	}
	yyj423++
	if yyhl423 {
		yyb423 = yyj423 > l
	} else {
		yyb423 = r.CheckBreak()
	}
	if yyb423 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.NonResourceAttributes != nil {
			x.NonResourceAttributes = nil
		}
	} else {
		if x.NonResourceAttributes == nil {
			x.NonResourceAttributes = new(NonResourceAttributes)
		}
		x.NonResourceAttributes.CodecDecodeSelf(d)
	}
	yyj423++
	if yyhl423 {
		yyb423 = yyj423 > l
	} else {
		yyb423 = r.CheckBreak()
	}
	if yyb423 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.User = ""
	} else {
		x.User = string(r.DecodeString())
	}
	yyj423++
	if yyhl423 {
		yyb423 = yyj423 > l
	} else {
		yyb423 = r.CheckBreak()
	}
	if yyb423 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Groups = nil
	} else {
		yyv427 := &x.Groups
		yym428 := z.DecBinary()
		_ = yym428
		if false {
		} else {
			z.F.DecSliceStringX(yyv427, false, d)
		}
	}
	yyj423++
	if yyhl423 {
		yyb423 = yyj423 > l
	} else {
		yyb423 = r.CheckBreak()
	}
	if yyb423 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Extra = nil
	} else {
		yyv429 := &x.Extra
		yym430 := z.DecBinary()
		_ = yym430
		if false {
		} else {
			h.decMapstringExtraValue((*map[string]ExtraValue)(yyv429), d)
		}
	}
	for {
		yyj423++
		if yyhl423 {
			yyb423 = yyj423 > l
		} else {
			yyb423 = r.CheckBreak()
		}
		if yyb423 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj423-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x ExtraValue) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym431 := z.EncBinary()
		_ = yym431
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			h.encExtraValue((ExtraValue)(x), e)
		}
	}
}

func (x *ExtraValue) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym432 := z.DecBinary()
	_ = yym432
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		h.decExtraValue((*ExtraValue)(x), d)
	}
}

func (x *SelfSubjectAccessReviewSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym433 := z.EncBinary()
		_ = yym433
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep434 := !z.EncBinary()
			yy2arr434 := z.EncBasicHandle().StructToArray
			var yyq434 [2]bool
			_, _, _ = yysep434, yyq434, yy2arr434
			const yyr434 bool = false
			var yynn434 int
			if yyr434 || yy2arr434 {
				r.EncodeArrayStart(2)
			} else {
				yynn434 = 2
				for _, b := range yyq434 {
					if b {
						yynn434++
					}
				}
				r.EncodeMapStart(yynn434)
				yynn434 = 0
			}
			if yyr434 || yy2arr434 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.ResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.ResourceAttributes.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("ResourceAttributes"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.ResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.ResourceAttributes.CodecEncodeSelf(e)
				}
			}
			if yyr434 || yy2arr434 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.NonResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.NonResourceAttributes.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("NonResourceAttributes"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.NonResourceAttributes == nil {
					r.EncodeNil()
				} else {
					x.NonResourceAttributes.CodecEncodeSelf(e)
				}
			}
			if yyr434 || yy2arr434 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *SelfSubjectAccessReviewSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym437 := z.DecBinary()
	_ = yym437
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct438 := r.ContainerType()
		if yyct438 == codecSelferValueTypeMap1234 {
			yyl438 := r.ReadMapStart()
			if yyl438 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl438, d)
			}
		} else if yyct438 == codecSelferValueTypeArray1234 {
			yyl438 := r.ReadArrayStart()
			if yyl438 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl438, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *SelfSubjectAccessReviewSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys439Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys439Slc
	var yyhl439 bool = l >= 0
	for yyj439 := 0; ; yyj439++ {
		if yyhl439 {
			if yyj439 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys439Slc = r.DecodeBytes(yys439Slc, true, true)
		yys439 := string(yys439Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys439 {
		case "ResourceAttributes":
			if r.TryDecodeAsNil() {
				if x.ResourceAttributes != nil {
					x.ResourceAttributes = nil
				}
			} else {
				if x.ResourceAttributes == nil {
					x.ResourceAttributes = new(ResourceAttributes)
				}
				x.ResourceAttributes.CodecDecodeSelf(d)
			}
		case "NonResourceAttributes":
			if r.TryDecodeAsNil() {
				if x.NonResourceAttributes != nil {
					x.NonResourceAttributes = nil
				}
			} else {
				if x.NonResourceAttributes == nil {
					x.NonResourceAttributes = new(NonResourceAttributes)
				}
				x.NonResourceAttributes.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys439)
		} // end switch yys439
	} // end for yyj439
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *SelfSubjectAccessReviewSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj442 int
	var yyb442 bool
	var yyhl442 bool = l >= 0
	yyj442++
	if yyhl442 {
		yyb442 = yyj442 > l
	} else {
		yyb442 = r.CheckBreak()
	}
	if yyb442 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.ResourceAttributes != nil {
			x.ResourceAttributes = nil
		}
	} else {
		if x.ResourceAttributes == nil {
			x.ResourceAttributes = new(ResourceAttributes)
		}
		x.ResourceAttributes.CodecDecodeSelf(d)
	}
	yyj442++
	if yyhl442 {
		yyb442 = yyj442 > l
	} else {
		yyb442 = r.CheckBreak()
	}
	if yyb442 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.NonResourceAttributes != nil {
			x.NonResourceAttributes = nil
		}
	} else {
		if x.NonResourceAttributes == nil {
			x.NonResourceAttributes = new(NonResourceAttributes)
		}
		x.NonResourceAttributes.CodecDecodeSelf(d)
	}
	for {
		yyj442++
		if yyhl442 {
			yyb442 = yyj442 > l
		} else {
			yyb442 = r.CheckBreak()
		}
		if yyb442 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj442-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *SubjectAccessReviewStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym445 := z.EncBinary()
		_ = yym445
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep446 := !z.EncBinary()
			yy2arr446 := z.EncBasicHandle().StructToArray
			var yyq446 [3]bool
			_, _, _ = yysep446, yyq446, yy2arr446
			const yyr446 bool = false
			var yynn446 int
			if yyr446 || yy2arr446 {
				r.EncodeArrayStart(3)
			} else {
				yynn446 = 3
				for _, b := range yyq446 {
					if b {
						yynn446++
					}
				}
				r.EncodeMapStart(yynn446)
				yynn446 = 0
			}
			if yyr446 || yy2arr446 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym448 := z.EncBinary()
				_ = yym448
				if false {
				} else {
					r.EncodeBool(bool(x.Allowed))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Allowed"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym449 := z.EncBinary()
				_ = yym449
				if false {
				} else {
					r.EncodeBool(bool(x.Allowed))
				}
			}
			if yyr446 || yy2arr446 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym451 := z.EncBinary()
				_ = yym451
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Reason"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym452 := z.EncBinary()
				_ = yym452
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			}
			if yyr446 || yy2arr446 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym454 := z.EncBinary()
				_ = yym454
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.EvaluationError))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("EvaluationError"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym455 := z.EncBinary()
				_ = yym455
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.EvaluationError))
				}
			}
			if yyr446 || yy2arr446 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *SubjectAccessReviewStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym456 := z.DecBinary()
	_ = yym456
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct457 := r.ContainerType()
		if yyct457 == codecSelferValueTypeMap1234 {
			yyl457 := r.ReadMapStart()
			if yyl457 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl457, d)
			}
		} else if yyct457 == codecSelferValueTypeArray1234 {
			yyl457 := r.ReadArrayStart()
			if yyl457 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl457, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *SubjectAccessReviewStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys458Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys458Slc
	var yyhl458 bool = l >= 0
	for yyj458 := 0; ; yyj458++ {
		if yyhl458 {
			if yyj458 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys458Slc = r.DecodeBytes(yys458Slc, true, true)
		yys458 := string(yys458Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys458 {
		case "Allowed":
			if r.TryDecodeAsNil() {
				x.Allowed = false
			} else {
				x.Allowed = bool(r.DecodeBool())
			}
		case "Reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				x.Reason = string(r.DecodeString())
			}
		case "EvaluationError":
			if r.TryDecodeAsNil() {
				x.EvaluationError = ""
			} else {
				x.EvaluationError = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys458)
		} // end switch yys458
	} // end for yyj458
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *SubjectAccessReviewStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj462 int
	var yyb462 bool
	var yyhl462 bool = l >= 0
	yyj462++
	if yyhl462 {
		yyb462 = yyj462 > l
	} else {
		yyb462 = r.CheckBreak()
	}
	if yyb462 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Allowed = false
	} else {
		x.Allowed = bool(r.DecodeBool())
	}
	yyj462++
	if yyhl462 {
		yyb462 = yyj462 > l
	} else {
		yyb462 = r.CheckBreak()
	}
	if yyb462 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		x.Reason = string(r.DecodeString())
	}
	yyj462++
	if yyhl462 {
		yyb462 = yyj462 > l
	} else {
		yyb462 = r.CheckBreak()
	}
	if yyb462 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.EvaluationError = ""
	} else {
		x.EvaluationError = string(r.DecodeString())
	}
	for {
		yyj462++
		if yyhl462 {
			yyb462 = yyj462 > l
		} else {
			yyb462 = r.CheckBreak()
		}
		if yyb462 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj462-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) encSliceapi_OwnerReference(v []pkg2_api.OwnerReference, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv466 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy467 := &yyv466
		yy467.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceapi_OwnerReference(v *[]pkg2_api.OwnerReference, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv468 := *v
	yyh468, yyl468 := z.DecSliceHelperStart()
	var yyc468 bool
	if yyl468 == 0 {
		if yyv468 == nil {
			yyv468 = []pkg2_api.OwnerReference{}
			yyc468 = true
		} else if len(yyv468) != 0 {
			yyv468 = yyv468[:0]
			yyc468 = true
		}
	} else if yyl468 > 0 {
		var yyrr468, yyrl468 int
		var yyrt468 bool
		if yyl468 > cap(yyv468) {

			yyrg468 := len(yyv468) > 0
			yyv2468 := yyv468
			yyrl468, yyrt468 = z.DecInferLen(yyl468, z.DecBasicHandle().MaxInitLen, 72)
			if yyrt468 {
				if yyrl468 <= cap(yyv468) {
					yyv468 = yyv468[:yyrl468]
				} else {
					yyv468 = make([]pkg2_api.OwnerReference, yyrl468)
				}
			} else {
				yyv468 = make([]pkg2_api.OwnerReference, yyrl468)
			}
			yyc468 = true
			yyrr468 = len(yyv468)
			if yyrg468 {
				copy(yyv468, yyv2468)
			}
		} else if yyl468 != len(yyv468) {
			yyv468 = yyv468[:yyl468]
			yyc468 = true
		}
		yyj468 := 0
		for ; yyj468 < yyrr468; yyj468++ {
			yyh468.ElemContainerState(yyj468)
			if r.TryDecodeAsNil() {
				yyv468[yyj468] = pkg2_api.OwnerReference{}
			} else {
				yyv469 := &yyv468[yyj468]
				yyv469.CodecDecodeSelf(d)
			}

		}
		if yyrt468 {
			for ; yyj468 < yyl468; yyj468++ {
				yyv468 = append(yyv468, pkg2_api.OwnerReference{})
				yyh468.ElemContainerState(yyj468)
				if r.TryDecodeAsNil() {
					yyv468[yyj468] = pkg2_api.OwnerReference{}
				} else {
					yyv470 := &yyv468[yyj468]
					yyv470.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj468 := 0
		for ; !r.CheckBreak(); yyj468++ {

			if yyj468 >= len(yyv468) {
				yyv468 = append(yyv468, pkg2_api.OwnerReference{}) // var yyz468 pkg2_api.OwnerReference
				yyc468 = true
			}
			yyh468.ElemContainerState(yyj468)
			if yyj468 < len(yyv468) {
				if r.TryDecodeAsNil() {
					yyv468[yyj468] = pkg2_api.OwnerReference{}
				} else {
					yyv471 := &yyv468[yyj468]
					yyv471.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj468 < len(yyv468) {
			yyv468 = yyv468[:yyj468]
			yyc468 = true
		} else if yyj468 == 0 && yyv468 == nil {
			yyv468 = []pkg2_api.OwnerReference{}
			yyc468 = true
		}
	}
	yyh468.End()
	if yyc468 {
		*v = yyv468
	}
}

func (x codecSelfer1234) encMapstringExtraValue(v map[string]ExtraValue, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk472, yyv472 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey1234)
		yym473 := z.EncBinary()
		_ = yym473
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF81234, string(yyk472))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue1234)
		if yyv472 == nil {
			r.EncodeNil()
		} else {
			yyv472.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x codecSelfer1234) decMapstringExtraValue(v *map[string]ExtraValue, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv474 := *v
	yyl474 := r.ReadMapStart()
	yybh474 := z.DecBasicHandle()
	if yyv474 == nil {
		yyrl474, _ := z.DecInferLen(yyl474, yybh474.MaxInitLen, 40)
		yyv474 = make(map[string]ExtraValue, yyrl474)
		*v = yyv474
	}
	var yymk474 string
	var yymv474 ExtraValue
	var yymg474 bool
	if yybh474.MapValueReset {
		yymg474 = true
	}
	if yyl474 > 0 {
		for yyj474 := 0; yyj474 < yyl474; yyj474++ {
			z.DecSendContainerState(codecSelfer_containerMapKey1234)
			if r.TryDecodeAsNil() {
				yymk474 = ""
			} else {
				yymk474 = string(r.DecodeString())
			}

			if yymg474 {
				yymv474 = yyv474[yymk474]
			} else {
				yymv474 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue1234)
			if r.TryDecodeAsNil() {
				yymv474 = nil
			} else {
				yyv476 := &yymv474
				yyv476.CodecDecodeSelf(d)
			}

			if yyv474 != nil {
				yyv474[yymk474] = yymv474
			}
		}
	} else if yyl474 < 0 {
		for yyj474 := 0; !r.CheckBreak(); yyj474++ {
			z.DecSendContainerState(codecSelfer_containerMapKey1234)
			if r.TryDecodeAsNil() {
				yymk474 = ""
			} else {
				yymk474 = string(r.DecodeString())
			}

			if yymg474 {
				yymv474 = yyv474[yymk474]
			} else {
				yymv474 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue1234)
			if r.TryDecodeAsNil() {
				yymv474 = nil
			} else {
				yyv478 := &yymv474
				yyv478.CodecDecodeSelf(d)
			}

			if yyv474 != nil {
				yyv474[yymk474] = yymv474
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x codecSelfer1234) encExtraValue(v ExtraValue, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv479 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yym480 := z.EncBinary()
		_ = yym480
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF81234, string(yyv479))
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decExtraValue(v *ExtraValue, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv481 := *v
	yyh481, yyl481 := z.DecSliceHelperStart()
	var yyc481 bool
	if yyl481 == 0 {
		if yyv481 == nil {
			yyv481 = []string{}
			yyc481 = true
		} else if len(yyv481) != 0 {
			yyv481 = yyv481[:0]
			yyc481 = true
		}
	} else if yyl481 > 0 {
		var yyrr481, yyrl481 int
		var yyrt481 bool
		if yyl481 > cap(yyv481) {

			yyrl481, yyrt481 = z.DecInferLen(yyl481, z.DecBasicHandle().MaxInitLen, 16)
			if yyrt481 {
				if yyrl481 <= cap(yyv481) {
					yyv481 = yyv481[:yyrl481]
				} else {
					yyv481 = make([]string, yyrl481)
				}
			} else {
				yyv481 = make([]string, yyrl481)
			}
			yyc481 = true
			yyrr481 = len(yyv481)
		} else if yyl481 != len(yyv481) {
			yyv481 = yyv481[:yyl481]
			yyc481 = true
		}
		yyj481 := 0
		for ; yyj481 < yyrr481; yyj481++ {
			yyh481.ElemContainerState(yyj481)
			if r.TryDecodeAsNil() {
				yyv481[yyj481] = ""
			} else {
				yyv481[yyj481] = string(r.DecodeString())
			}

		}
		if yyrt481 {
			for ; yyj481 < yyl481; yyj481++ {
				yyv481 = append(yyv481, "")
				yyh481.ElemContainerState(yyj481)
				if r.TryDecodeAsNil() {
					yyv481[yyj481] = ""
				} else {
					yyv481[yyj481] = string(r.DecodeString())
				}

			}
		}

	} else {
		yyj481 := 0
		for ; !r.CheckBreak(); yyj481++ {

			if yyj481 >= len(yyv481) {
				yyv481 = append(yyv481, "") // var yyz481 string
				yyc481 = true
			}
			yyh481.ElemContainerState(yyj481)
			if yyj481 < len(yyv481) {
				if r.TryDecodeAsNil() {
					yyv481[yyj481] = ""
				} else {
					yyv481[yyj481] = string(r.DecodeString())
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj481 < len(yyv481) {
			yyv481 = yyv481[:yyj481]
			yyc481 = true
		} else if yyj481 == 0 && yyv481 == nil {
			yyv481 = []string{}
			yyc481 = true
		}
	}
	yyh481.End()
	if yyc481 {
		*v = yyv481
	}
}
